---
:name: Power_Git
:aliases:
  :mikedrop: git push origin master
  :choochoo: git push origin master --force
:custom_functions:
  :gtimemachine:
    :echo_description: git checkout master; git branch -D time_machine; git checkout -b time_machine commit
    :helper_descrpition: git checkout master; git branch -D time_machine; git checkout -b time_machine $1
    :command: |-
      echo "Switching to master"
      run_and_tell git checkout master
      echo "clearing time_machine branch"
      run_and_tell git branch -D time_machine
      echo "checking out time machine branch at commit $1"
      run_and_tell git checkout -b time_machine $1
  :gbn:
    :eacho_descrpition: simple git branch menu
    :helper_descrpition: simple git branch menu
    :command: |-
      branches=()
      eval "$(git for-each-ref --shell --format='branches+=(%(refname:short))' refs/heads/)"
      currentBranch=$(git symbolic-ref HEAD --short)
      menuCounter=0
      while true
      do
          clear
          for indexed in ${!branches[@]}; do
            if [ $menuCounter -eq $indexed ]
              then
                if [ ${branches[indexed]} == $currentBranch ]
                then
                  echo ">*${branches[indexed]}"
                else
                  echo "> ${branches[indexed]}"
                fi
              else
                if [ ${branches[indexed]} == $currentBranch ]
                then
                  echo " *${branches[indexed]}"
                else
                  echo "  ${branches[indexed]}"
                fi
              fi
          done

          read -r -sn1 t
          # tput sc;
          case $t in
              A) let "menuCounter-=1";
              if [ $menuCounter -lt 0 ]
              then
                menuCounter=0
              fi
                ;;
              B) let "menuCounter+=1";;
              C) gco ${branches[$menuCounter]}; break ;;
              D) echo left ;;
          esac
      done
  :gbnp:
    :eacho_descrpition: simple git branch menu (pull into branch)
    :helper_descrpition: simple git branch menu (pull into branch)
    :command: |-
      branches=()
      eval "$(git for-each-ref --shell --format='branches+=(%(refname:short))' refs/heads/)"
      currentBranch=$(git symbolic-ref HEAD --short)
      menuCounter=0
      while true
      do
          clear
          for indexed in ${!branches[@]}; do
            if [ $menuCounter -eq $indexed ]
              then
                if [ ${branches[indexed]} == $currentBranch ]
                then
                  echo ">*${branches[indexed]}"
                else
                  echo "> ${branches[indexed]}"
                fi
              else
                if [ ${branches[indexed]} == $currentBranch ]
                then
                  echo " *${branches[indexed]}"
                else
                  echo "  ${branches[indexed]}"
                fi
              fi
          done

          read -r -sn1 t
          # tput sc;
          case $t in
              A) let "menuCounter-=1";
              if [ $menuCounter -lt 0 ]
              then
                menuCounter=0
              fi
                ;;
              B) let "menuCounter+=1";;
              C) git pull origin ${branches[$menuCounter]}; break ;;
              D) echo left ;;
          esac
      done
